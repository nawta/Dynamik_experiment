{"version":3,"file":"js/main.161b1dad.js","mappings":"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","sources":["webpack://vue_jspsych_test/./node_modules/auto-bind/index.js","webpack://vue_jspsych_test/./src/App.vue","webpack://vue_jspsych_test/./src/scripts/questionData.js","webpack://vue_jspsych_test/./src/scripts/experiment.js","webpack://vue_jspsych_test/./src/App.vue?7ccd","webpack://vue_jspsych_test/./node_modules/@jspsych-contrib/plugin-pipe/dist/index.js","webpack://vue_jspsych_test/./src/main.js","webpack://vue_jspsych_test/./node_modules/vue-loader/dist/exportHelper.js","webpack://vue_jspsych_test/webpack/bootstrap","webpack://vue_jspsych_test/webpack/runtime/chunk loaded","webpack://vue_jspsych_test/webpack/runtime/define property getters","webpack://vue_jspsych_test/webpack/runtime/global","webpack://vue_jspsych_test/webpack/runtime/hasOwnProperty shorthand","webpack://vue_jspsych_test/webpack/runtime/make namespace object","webpack://vue_jspsych_test/webpack/runtime/jsonp chunk loading","webpack://vue_jspsych_test/webpack/startup"],"sourcesContent":["'use strict';\n\n// Gets all non-builtin properties up the prototype chain\nconst getAllProperties = object => {\n\tconst properties = new Set();\n\n\tdo {\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tproperties.add([object, key]);\n\t\t}\n\t} while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n\treturn properties;\n};\n\nmodule.exports = (self, {include, exclude} = {}) => {\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n\t\tif (include) {\n\t\t\treturn include.some(match);\n\t\t}\n\n\t\tif (exclude) {\n\t\t\treturn !exclude.some(match);\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tfor (const [object, key] of getAllProperties(self.constructor.prototype)) {\n\t\tif (key === 'constructor' || !filter(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\t\tif (descriptor && typeof descriptor.value === 'function') {\n\t\t\tself[key] = self[key].bind(self);\n\t\t}\n\t}\n\n\treturn self;\n};\n","<template>\n  <div id=\"jspsych-target\"></div>\n</template>\n\n<script>\nimport { onMounted, getCurrentInstance } from 'vue'\nimport { loadQuestionData } from './scripts/questionData.js'\nimport { createExperiment } from './scripts/experiment.js'\n\nexport default {\n  setup() {\n    const instance = getCurrentInstance()\n    \n    onMounted(async () => {\n      // console.log('App.vue: Component mounted');\n      try {\n        // console.log('App.vue: Loading question data');\n        const questionData = await loadQuestionData()\n        // console.log('App.vue: Question data loaded:', questionData);\n        \n        const { $jsPsych, $jsPsychPlugins, $subject_id } = instance.appContext.config.globalProperties\n        // console.log('App.vue: Global properties:', { $jsPsych, $jsPsychPlugins, $subject_id });\n        \n        // console.log('App.vue: Creating experiment timeline');\n        const timeline = createExperiment(questionData, $jsPsych, $jsPsychPlugins, $subject_id)\n        // console.log('App.vue: Experiment timeline created:', timeline);\n        \n        // console.log('App.vue: Running jsPsych experiment');\n        $jsPsych.run(timeline)\n      } catch (error) {\n        console.error(\"App.vue: Failed to load question data or run experiment:\", error)\n        document.body.innerHTML = `<h1>Error</h1><p>Failed to load experiment data. Please try again later.</p>`\n      }\n    })\n  }\n}\n</script>","//questionData.js\n\nexport async function loadQuestionData() {\n    // console.log('questionData.js: loadQuestionData called');\n    const possiblePaths = [\n        './questions/encryptedQuestions_claude_ver3.json',\n        '/questions/encryptedQuestions_claude_ver3.json',\n        '/jspsych_vue_test/questions/encryptedQuestions_claude_ver3.json'\n    ];\n\n    for (const path of possiblePaths) {\n        try {\n            // console.log(`questionData.js: Attempting to fetch from ${path}`);\n            const response = await fetch(path);\n            // console.log('questionData.js: Fetch response:', response);\n            if (response.ok) {\n                const encryptedData = await response.json();\n                // console.log('questionData.js: Encrypted data loaded:', encryptedData);\n                return decryptData(encryptedData);\n            }\n        } catch (error) {\n            console.error(`questionData.js: Failed to load from ${path}:`, error);\n        }\n    }\n\n    throw new Error(\"Failed to load question data from all possible paths\");\n}\n\nfunction decryptData(encryptedData) {\n    // デバッグ: encryptedDataの型と内容をログに出力\n    // console.log(\"questionData.js: decryptData called\");\n    // console.log(\"questionData.js: encryptedDataの型:\", typeof encryptedData);\n    // console.log(\"questionData.js: encryptedDataの内容:\", encryptedData);\n\n    // 1. Split and Join の逆操作\n    function unsplitAndJoin(text, chunkSize = 5) {\n        const totalChunks = Math.ceil(text.length / chunkSize);\n        const chunks = [];\n        for (let i = 0; i < totalChunks; i++) {\n            chunks.unshift(text.slice(i * chunkSize, (i + 1) * chunkSize));\n        }\n        return chunks.join('');\n    }\n\n\n    // 2. XOR 暗号の復号化\n    function xorDecrypt(text, key) {\n        return text.split('').map((char, index) =>\n            String.fromCharCode(char.charCodeAt(0) ^ key.charCodeAt(index % key.length))\n        ).join('');\n    }\n\n    // 3. 置換暗号の復号化\n    function substituteDecrypt(text, shift = 3) {\n        return text.split('').map(char => {\n            const code = char.charCodeAt(0);\n            return String.fromCharCode((code - shift + 256) % 256);\n        }).join('');\n    }\n\n    // 暗号化の逆順で復号化を実行\n    // const unsplitted = unsplitAndJoin(encryptedData);\n    // console.log(\"unsplitted: \", unsplitted);\n    // const xorDecrypted = xorDecrypt(unsplitted, 'secretkey');\n    // console.log(\"xorDecrypted: \", xorDecrypted);\n    const substitutedDecrypted = substituteDecrypt(encryptedData);\n    // console.log(\"substitutedDecrypted: \", substitutedDecrypted);\n\n    // JSON 文字列をオブジェクトに変換\n    try {\n        // Base64デコードを行い、UTF-8文字列に戻す\n        const decodedString = decodeURIComponent(escape(atob(substitutedDecrypted)));\n        // console.log(\"questionData.js: decodedString:\", decodedString);\n        const parsedData = JSON.parse(decodedString);\n        // console.log(\"questionData.js: Parsed data:\", parsedData);\n        return JSON.parse(decodedString);\n    } catch (error) {\n        console.error(\"Decryption error:\", error);\n        // console.log(\"Decrypted string:\", unsplitted);\n        throw error;\n    }\n}","// experiment.js\n\nexport function createExperiment(questionData, jsPsych, jsPsychPlugins, subject_id) {\n  // console.log('experiment.js: Creating experiment');\n  // console.log('experiment.js: questionData:', JSON.stringify(questionData, null, 2));\n\n  // パラメータを取得\n  const urlParams = getUrlParams();\n\n  // URLからGETパラメータを取得する関数\n  function getUrlParams() {\n    const params = new URLSearchParams(window.location.search);\n    return {\n      PROLIFIC_PID: params.get('PROLIFIC_PID'),\n      STUDY_ID: params.get('STUDY_ID'),\n      SESSION_ID: params.get('SESSION_ID')\n    };\n  }\n  // subject_idの設定\n  // console.log('experiment.js: PROLIFIC_PID or Generated subject_id:', subject_id);\n\n  // パラメータの有無をチェック\n  const paramsPresent = {\n    PROLIFIC_PID: !!urlParams.PROLIFIC_PID,\n    STUDY_ID: !!urlParams.STUDY_ID,\n    SESSION_ID: !!urlParams.SESSION_ID\n  }\n\n  const add_subject_id = {\n    type: jsPsychCallFunction,\n    func: function () {\n      jsPsych.data.addProperties({\n        subject_id: subject_id,\n        PROLIFIC_PID: urlParams.PROLIFIC_PID,\n        STUDY_ID: urlParams.STUDY_ID,\n        SESSION_ID: urlParams.SESSION_ID,\n        paramsPresent: paramsPresent\n      });\n      // console.log('subject_id:', jsPsych.data.get().select('subject_id').values);\n      // console.log('PROLIFIC_PID:', jsPsych.data.get().select('PROLIFIC_PID').values);\n      // console.log('STUDY_ID:', jsPsych.data.get().select('STUDY_ID').values);\n      // console.log('SESSION_ID:', jsPsych.data.get().select('SESSION_ID').values);\n      // console.log('paramsPresent:', jsPsych.data.get().select('paramsPresent').values);\n    }\n  };\n\n  // ユーティリティ関数: 配列からランダムに要素を選択\n  function getRandomElements(arr, n) {\n    let shuffled = [...arr].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, n);\n  }\n\n  // ユーティリティ関数: 配列をシャッフル\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  // CNN動画の選択と条件のランダム化\n  function selectAndRandomizeCNNVideos(questionData) {\n    // 1~20の番号から6つをランダムに選択(実験時は1, 3, 4, 6, 8, 9)\n    const selectedNumbers = shuffleArray([1, 3, 4, 6, 8, 9]); //getRandomElements([...Array(20)].map((_, i) => i + 1), 6);\n\n    // 条件をランダムに並べ替え（2セット分）\n    const randomizedConditions = shuffleArray([...questionData.cnn_videos.conditions, ...questionData.cnn_videos.conditions]);\n\n    // 選択された動画と条件を組み合わせる\n    return selectedNumbers.map((number, index) => {\n      const condition = randomizedConditions[index];\n      const videoData = questionData.cnn_videos.videos.find(v => v.number === number);\n      return {\n        video: `./video/${condition}/CNN${number}_${condition}.mp4`,\n        questions: videoData.questions,\n        condition: condition,\n        number: number\n      };\n    });\n  }\n \n  // 実験の各パートを定義\n  const welcome = {\n    type: jsPsychHtmlKeyboardResponse,\n    stimulus: \"<h1>Welcome to the Listening Comprehension with Modified Subtitles Experiment</h1><p>Press the spacebar to begin.</p>\"\n  };\n\n  const demographic_survey = {\n    type: jsPsychSurveyHtmlForm,\n    preamble: \"<p>Please answer the following questions:</p>\",\n    html: `\n          <label for=\"gender\">Gender:</label>\n          <select id=\"gender\" name=\"gender\" required>\n              <option value=\"\">Select</option>\n              <option value=\"man\">Man</option>\n              <option value=\"woman\">Woman</option>\n              <option value=\"non-binary\">Non-binary</option>\n          </select>\n          <br><br>\n          <label for=\"age\">Age:</label>\n          <input type=\"number\" id=\"age\" name=\"age\" min=\"10\" max=\"100\" required>\n          <br><br>\n          <label for=\"nationality\">Nationality:</label>\n          <select id=\"nationality\" name=\"nationality\" required>\n                <option value=\"\">Select</option>\n                <option value=\"Afganistan\">Afghanistan</option>\n                <option value=\"Albania\">Albania</option>\n                <option value=\"Algeria\">Algeria</option>\n                <option value=\"American Samoa\">American Samoa</option>\n                <option value=\"Andorra\">Andorra</option>\n                <option value=\"Angola\">Angola</option>\n                <option value=\"Anguilla\">Anguilla</option>\n                <option value=\"Antigua &amp; Barbuda\">Antigua &amp; Barbuda</option>\n                <option value=\"Argentina\">Argentina</option>\n                <option value=\"Armenia\">Armenia</option>\n                <option value=\"Aruba\">Aruba</option>\n                <option value=\"Australia\">Australia</option>\n                <option value=\"Austria\">Austria</option>\n                <option value=\"Azerbaijan\">Azerbaijan</option>\n                <option value=\"Bahamas\">Bahamas</option>\n                <option value=\"Bahrain\">Bahrain</option>\n                <option value=\"Bangladesh\">Bangladesh</option>\n                <option value=\"Barbados\">Barbados</option>\n                <option value=\"Belarus\">Belarus</option>\n                <option value=\"Belgium\">Belgium</option>\n                <option value=\"Belize\">Belize</option>\n                <option value=\"Benin\">Benin</option>\n                <option value=\"Bermuda\">Bermuda</option>\n                <option value=\"Bhutan\">Bhutan</option>\n                <option value=\"Bolivia\">Bolivia</option>\n                <option value=\"Bonaire\">Bonaire</option>\n                <option value=\"Bosnia &amp; Herzegovina\">Bosnia &amp; Herzegovina</option>\n                <option value=\"Botswana\">Botswana</option>\n                <option value=\"Brazil\">Brazil</option>\n                <option value=\"British Indian Ocean Ter\">British Indian Ocean Ter</option>\n                <option value=\"Brunei\">Brunei</option>\n                <option value=\"Bulgaria\">Bulgaria</option>\n                <option value=\"Burkina Faso\">Burkina Faso</option>\n                <option value=\"Burundi\">Burundi</option>\n                <option value=\"Cambodia\">Cambodia</option>\n                <option value=\"Cameroon\">Cameroon</option>\n                <option value=\"Canada\">Canada</option>\n                <option value=\"Canary Islands\">Canary Islands</option>\n                <option value=\"Cape Verde\">Cape Verde</option>\n                <option value=\"Cayman Islands\">Cayman Islands</option>\n                <option value=\"Central African Republic\">Central African Republic</option>\n                <option value=\"Chad\">Chad</option>\n                <option value=\"Channel Islands\">Channel Islands</option>\n                <option value=\"Chile\">Chile</option>\n                <option value=\"China\">China</option>\n                <option value=\"Christmas Island\">Christmas Island</option>\n                <option value=\"Cocos Island\">Cocos Island</option>\n                <option value=\"Colombia\">Colombia</option>\n                <option value=\"Comoros\">Comoros</option>\n                <option value=\"Congo\">Congo</option>\n                <option value=\"Cook Islands\">Cook Islands</option>\n                <option value=\"Costa Rica\">Costa Rica</option>\n                <option value=\"Cote DIvoire\">Cote D'Ivoire</option>\n                <option value=\"Croatia\">Croatia</option>\n                <option value=\"Cuba\">Cuba</option>\n                <option value=\"Curaco\">Curacao</option>\n                <option value=\"Cyprus\">Cyprus</option>\n                <option value=\"Czech Republic\">Czech Republic</option>\n                <option value=\"Denmark\">Denmark</option>\n                <option value=\"Djibouti\">Djibouti</option>\n                <option value=\"Dominica\">Dominica</option>\n                <option value=\"Dominican Republic\">Dominican Republic</option>\n                <option value=\"East Timor\">East Timor</option>\n                <option value=\"Ecuador\">Ecuador</option>\n                <option value=\"Egypt\">Egypt</option>\n                <option value=\"El Salvador\">El Salvador</option>\n                <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\n                <option value=\"Eritrea\">Eritrea</option>\n                <option value=\"Estonia\">Estonia</option>\n                <option value=\"Ethiopia\">Ethiopia</option>\n                <option value=\"Falkland Islands\">Falkland Islands</option>\n                <option value=\"Faroe Islands\">Faroe Islands</option>\n                <option value=\"Fiji\">Fiji</option>\n                <option value=\"Finland\">Finland</option>\n                <option value=\"France\">France</option>\n                <option value=\"French Guiana\">French Guiana</option>\n                <option value=\"French Polynesia\">French Polynesia</option>\n                <option value=\"French Southern Ter\">French Southern Ter</option>\n                <option value=\"Gabon\">Gabon</option>\n                <option value=\"Gambia\">Gambia</option>\n                <option value=\"Georgia\">Georgia</option>\n                <option value=\"Germany\">Germany</option>\n                <option value=\"Ghana\">Ghana</option>\n                <option value=\"Gibraltar\">Gibraltar</option>\n                <option value=\"Great Britain\">Great Britain</option>\n                <option value=\"Greece\">Greece</option>\n                <option value=\"Greenland\">Greenland</option>\n                <option value=\"Grenada\">Grenada</option>\n                <option value=\"Guadeloupe\">Guadeloupe</option>\n                <option value=\"Guam\">Guam</option>\n                <option value=\"Guatemala\">Guatemala</option>\n                <option value=\"Guinea\">Guinea</option>\n                <option value=\"Guyana\">Guyana</option>\n                <option value=\"Haiti\">Haiti</option>\n                <option value=\"Hawaii\">Hawaii</option>\n                <option value=\"Honduras\">Honduras</option>\n                <option value=\"Hong Kong\">Hong Kong</option>\n                <option value=\"Hungary\">Hungary</option>\n                <option value=\"Iceland\">Iceland</option>\n                <option value=\"India\">India</option>\n                <option value=\"Indonesia\">Indonesia</option>\n                <option value=\"Iran\">Iran</option>\n                <option value=\"Iraq\">Iraq</option>\n                <option value=\"Ireland\">Ireland</option>\n                <option value=\"Isle of Man\">Isle of Man</option>\n                <option value=\"Israel\">Israel</option>\n                <option value=\"Italy\">Italy</option>\n                <option value=\"Jamaica\">Jamaica</option>\n                <option value=\"Japan\">Japan</option>\n                <option value=\"Jordan\">Jordan</option>\n                <option value=\"Kazakhstan\">Kazakhstan</option>\n                <option value=\"Kenya\">Kenya</option>\n                <option value=\"Kiribati\">Kiribati</option>\n                <option value=\"Korea North\">Korea North</option>\n                <option value=\"Korea Sout\">Korea South</option>\n                <option value=\"Kuwait\">Kuwait</option>\n                <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                <option value=\"Laos\">Laos</option>\n                <option value=\"Latvia\">Latvia</option>\n                <option value=\"Lebanon\">Lebanon</option>\n                <option value=\"Lesotho\">Lesotho</option>\n                <option value=\"Liberia\">Liberia</option>\n                <option value=\"Libya\">Libya</option>\n                <option value=\"Liechtenstein\">Liechtenstein</option>\n                <option value=\"Lithuania\">Lithuania</option>\n                <option value=\"Luxembourg\">Luxembourg</option>\n                <option value=\"Macau\">Macau</option>\n                <option value=\"Macedonia\">Macedonia</option>\n                <option value=\"Madagascar\">Madagascar</option>\n                <option value=\"Malaysia\">Malaysia</option>\n                <option value=\"Malawi\">Malawi</option>\n                <option value=\"Maldives\">Maldives</option>\n                <option value=\"Mali\">Mali</option>\n                <option value=\"Malta\">Malta</option>\n                <option value=\"Marshall Islands\">Marshall Islands</option>\n                <option value=\"Martinique\">Martinique</option>\n                <option value=\"Mauritania\">Mauritania</option>\n                <option value=\"Mauritius\">Mauritius</option>\n                <option value=\"Mayotte\">Mayotte</option>\n                <option value=\"Mexico\">Mexico</option>\n                <option value=\"Midway Islands\">Midway Islands</option>\n                <option value=\"Moldova\">Moldova</option>\n                <option value=\"Monaco\">Monaco</option>\n                <option value=\"Mongolia\">Mongolia</option>\n                <option value=\"Montserrat\">Montserrat</option>\n                <option value=\"Morocco\">Morocco</option>\n                <option value=\"Mozambique\">Mozambique</option>\n                <option value=\"Myanmar\">Myanmar</option>\n                <option value=\"Nambia\">Nambia</option>\n                <option value=\"Nauru\">Nauru</option>\n                <option value=\"Nepal\">Nepal</option>\n                <option value=\"Netherland Antilles\">Netherland Antilles</option>\n                <option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\n                <option value=\"Nevis\">Nevis</option>\n                <option value=\"New Caledonia\">New Caledonia</option>\n                <option value=\"New Zealand\">New Zealand</option>\n                <option value=\"Nicaragua\">Nicaragua</option>\n                <option value=\"Niger\">Niger</option>\n                <option value=\"Nigeria\">Nigeria</option>\n                <option value=\"Niue\">Niue</option>\n                <option value=\"Norfolk Island\">Norfolk Island</option>\n                <option value=\"Norway\">Norway</option>\n                <option value=\"Oman\">Oman</option>\n                <option value=\"Pakistan\">Pakistan</option>\n                <option value=\"Palau Island\">Palau Island</option>\n                <option value=\"Palestine\">Palestine</option>\n                <option value=\"Panama\">Panama</option>\n                <option value=\"Papua New Guinea\">Papua New Guinea</option>\n                <option value=\"Paraguay\">Paraguay</option>\n                <option value=\"Peru\">Peru</option>\n                <option value=\"Phillipines\">Philippines</option>\n                <option value=\"Pitcairn Island\">Pitcairn Island</option>\n                <option value=\"Poland\">Poland</option>\n                <option value=\"Portugal\">Portugal</option>\n                <option value=\"Puerto Rico\">Puerto Rico</option>\n                <option value=\"Qatar\">Qatar</option>\n                <option value=\"Republic of Montenegro\">Republic of Montenegro</option>\n                <option value=\"Republic of Serbia\">Republic of Serbia</option>\n                <option value=\"Reunion\">Reunion</option>\n                <option value=\"Romania\">Romania</option>\n                <option value=\"Russia\">Russia</option>\n                <option value=\"Rwanda\">Rwanda</option>\n                <option value=\"St Barthelemy\">St Barthelemy</option>\n                <option value=\"St Eustatius\">St Eustatius</option>\n                <option value=\"St Helena\">St Helena</option>\n                <option value=\"St Kitts-Nevis\">St Kitts-Nevis</option>\n                <option value=\"St Lucia\">St Lucia</option>\n                <option value=\"St Maarten\">St Maarten</option>\n                <option value=\"St Pierre &amp; Miquelon\">St Pierre &amp; Miquelon</option>\n                <option value=\"St Vincent &amp; Grenadines\">St Vincent &amp; Grenadines</option>\n                <option value=\"Saipan\">Saipan</option>\n                <option value=\"Samoa\">Samoa</option>\n                <option value=\"Samoa American\">Samoa American</option>\n                <option value=\"San Marino\">San Marino</option>\n                <option value=\"Sao Tome &amp; Principe\">Sao Tome &amp; Principe</option>\n                <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                <option value=\"Senegal\">Senegal</option>\n                <option value=\"Serbia\">Serbia</option>\n                <option value=\"Seychelles\">Seychelles</option>\n                <option value=\"Sierra Leone\">Sierra Leone</option>\n                <option value=\"Singapore\">Singapore</option>\n                <option value=\"Slovakia\">Slovakia</option>\n                <option value=\"Slovenia\">Slovenia</option>\n                <option value=\"Solomon Islands\">Solomon Islands</option>\n                <option value=\"Somalia\">Somalia</option>\n                <option value=\"South Africa\">South Africa</option>\n                <option value=\"Spain\">Spain</option>\n                <option value=\"Sri Lanka\">Sri Lanka</option>\n                <option value=\"Sudan\">Sudan</option>\n                <option value=\"Suriname\">Suriname</option>\n                <option value=\"Swaziland\">Swaziland</option>\n                <option value=\"Sweden\">Sweden</option>\n                <option value=\"Switzerland\">Switzerland</option>\n                <option value=\"Syria\">Syria</option>\n                <option value=\"Tahiti\">Tahiti</option>\n                <option value=\"Taiwan\">Taiwan</option>\n                <option value=\"Tajikistan\">Tajikistan</option>\n                <option value=\"Tanzania\">Tanzania</option>\n                <option value=\"Thailand\">Thailand</option>\n                <option value=\"Togo\">Togo</option>\n                <option value=\"Tokelau\">Tokelau</option>\n                <option value=\"Tonga\">Tonga</option>\n                <option value=\"Trinidad &amp; Tobago\">Trinidad &amp; Tobago</option>\n                <option value=\"Tunisia\">Tunisia</option>\n                <option value=\"Turkey\">Turkey</option>\n                <option value=\"Turkmenistan\">Turkmenistan</option>\n                <option value=\"Turks &amp; Caicos Is\">Turks &amp; Caicos Is</option>\n                <option value=\"Tuvalu\">Tuvalu</option>\n                <option value=\"Uganda\">Uganda</option>\n                <option value=\"Ukraine\">Ukraine</option>\n                <option value=\"United Arab Erimates\">United Arab Emirates</option>\n                <option value=\"United Kingdom\">United Kingdom</option>\n                <option value=\"United States of America\">United States of America</option>\n                <option value=\"Uraguay\">Uruguay</option>\n                <option value=\"Uzbekistan\">Uzbekistan</option>\n                <option value=\"Vanuatu\">Vanuatu</option>\n                <option value=\"Vatican City State\">Vatican City State</option>\n                <option value=\"Venezuela\">Venezuela</option>\n                <option value=\"Vietnam\">Vietnam</option>\n                <option value=\"Virgin Islands (Brit)\">Virgin Islands (Brit)</option>\n                <option value=\"Virgin Islands (USA)\">Virgin Islands (USA)</option>\n                <option value=\"Wake Island\">Wake Island</option>\n                <option value=\"Wallis &amp; Futana Is\">Wallis &amp; Futana Is</option>\n                <option value=\"Yemen\">Yemen</option>\n                <option value=\"Zaire\">Zaire</option>\n                <option value=\"Zambia\">Zambia</option>\n                <option value=\"Zimbabwe\">Zimbabwe</option>\n          </select>\n          <br><br>\n          <label for=\"native_language\">Native Language:</label>\n          <select id=\"native_language\" name=\"native_language\" required>\n                <option value=\"\">Select</option>\n                <option value=\"English\">English</option>\n                <option value=\"Afrikaans\">Afrikaans</option>\n                <option value=\"Albanian\">Albanian</option>\n                <option value=\"Arabic\">Arabic</option>\n                <option value=\"Armenian\">Armenian</option>\n                <option value=\"Basque\">Basque</option>\n                <option value=\"Bengali\">Bengali</option>\n                <option value=\"Bulgarian\">Bulgarian</option>\n                <option value=\"Catalan\">Catalan</option>\n                <option value=\"Cambodian\">Cambodian</option>\n                <option value=\"Chinese (Mandarin)\">Chinese (Mandarin)</option>\n                <option value=\"Croatian\">Croatian</option>\n                <option value=\"Czech\">Czech</option>\n                <option value=\"Danish\">Danish</option>\n                <option value=\"Dutch\">Dutch</option>\n                <option value=\"Estonian\">Estonian</option>\n                <option value=\"Fiji\">Fiji</option>\n                <option value=\"Finnish\">Finnish</option>\n                <option value=\"French\">French</option>\n                <option value=\"Georgian\">Georgian</option>\n                <option value=\"German\">German</option>\n                <option value=\"Greek\">Greek</option>\n                <option value=\"Gujarati\">Gujarati</option>\n                <option value=\"Hebrew\">Hebrew</option>\n                <option value=\"Hindi\">Hindi</option>\n                <option value=\"Hungarian\">Hungarian</option>\n                <option value=\"Icelandic\">Icelandic</option>\n                <option value=\"Indonesian\">Indonesian</option>\n                <option value=\"Irish\">Irish</option>\n                <option value=\"Italian\">Italian</option>\n                <option value=\"Japanese\">Japanese</option>\n                <option value=\"Javanese\">Javanese</option>\n                <option value=\"Korean\">Korean</option>\n                <option value=\"Latin\">Latin</option>\n                <option value=\"Latvian\">Latvian</option>\n                <option value=\"Lithuanian\">Lithuanian</option>\n                <option value=\"Macedonian\">Macedonian</option>\n                <option value=\"Malay\">Malay</option>\n                <option value=\"Malayalam\">Malayalam</option>\n                <option value=\"Maltese\">Maltese</option>\n                <option value=\"Maori\">Maori</option>\n                <option value=\"Marathi\">Marathi</option>\n                <option value=\"Mongolian\">Mongolian</option>\n                <option value=\"Nepali\">Nepali</option>\n                <option value=\"Norwegian\">Norwegian</option>\n                <option value=\"Persian\">Persian</option>\n                <option value=\"Polish\">Polish</option>\n                <option value=\"Portuguese\">Portuguese</option>\n                <option value=\"Punjabi\">Punjabi</option>\n                <option value=\"Quechua\">Quechua</option>\n                <option value=\"Romanian\">Romanian</option>\n                <option value=\"Russian\">Russian</option>\n                <option value=\"Samoan\">Samoan</option>\n                <option value=\"Serbian\">Serbian</option>\n                <option value=\"Slovak\">Slovak</option>\n                <option value=\"Slovenian\">Slovenian</option>\n                <option value=\"Spanish\">Spanish</option>\n                <option value=\"Swahili\">Swahili</option>\n                <option value=\"Swedish \">Swedish </option>\n                <option value=\"Tamil\">Tamil</option>\n                <option value=\"Tatar\">Tatar</option>\n                <option value=\"Telugu\">Telugu</option>\n                <option value=\"Thai\">Thai</option>\n                <option value=\"Tibetan\">Tibetan</option>\n                <option value=\"Tonga\">Tonga</option>\n                <option value=\"Turkish\">Turkish</option>\n                <option value=\"Ukrainian\">Ukrainian</option>\n                <option value=\"Urdu\">Urdu</option>\n                <option value=\"Uzbek\">Uzbek</option>\n                <option value=\"Vietnamese\">Vietnamese</option>\n                <option value=\"Welsh\">Welsh</option>\n                <option value=\"Xhosa\">Xhosa</option>\n          </select>\n          <br><br>\n          <label>Other Languages Spoken (Optional):</label><br>\n          <div>\n            <label for=\"other_language1\">Other Language 1:</label>\n            <select id=\"other_language1\" name=\"other_language1\">\n              <option value=\"\">Select</option>\n                <option value=\"English\">English</option>\n                <option value=\"Afrikaans\">Afrikaans</option>\n                <option value=\"Albanian\">Albanian</option>\n                <option value=\"Arabic\">Arabic</option>\n                <option value=\"Armenian\">Armenian</option>\n                <option value=\"Basque\">Basque</option>\n                <option value=\"Bengali\">Bengali</option>\n                <option value=\"Bulgarian\">Bulgarian</option>\n                <option value=\"Catalan\">Catalan</option>\n                <option value=\"Cambodian\">Cambodian</option>\n                <option value=\"Chinese (Mandarin)\">Chinese (Mandarin)</option>\n                <option value=\"Croatian\">Croatian</option>\n                <option value=\"Czech\">Czech</option>\n                <option value=\"Danish\">Danish</option>\n                <option value=\"Dutch\">Dutch</option>\n                <option value=\"Estonian\">Estonian</option>\n                <option value=\"Fiji\">Fiji</option>\n                <option value=\"Finnish\">Finnish</option>\n                <option value=\"French\">French</option>\n                <option value=\"Georgian\">Georgian</option>\n                <option value=\"German\">German</option>\n                <option value=\"Greek\">Greek</option>\n                <option value=\"Gujarati\">Gujarati</option>\n                <option value=\"Hebrew\">Hebrew</option>\n                <option value=\"Hindi\">Hindi</option>\n                <option value=\"Hungarian\">Hungarian</option>\n                <option value=\"Icelandic\">Icelandic</option>\n                <option value=\"Indonesian\">Indonesian</option>\n                <option value=\"Irish\">Irish</option>\n                <option value=\"Italian\">Italian</option>\n                <option value=\"Japanese\">Japanese</option>\n                <option value=\"Javanese\">Javanese</option>\n                <option value=\"Korean\">Korean</option>\n                <option value=\"Latin\">Latin</option>\n                <option value=\"Latvian\">Latvian</option>\n                <option value=\"Lithuanian\">Lithuanian</option>\n                <option value=\"Macedonian\">Macedonian</option>\n                <option value=\"Malay\">Malay</option>\n                <option value=\"Malayalam\">Malayalam</option>\n                <option value=\"Maltese\">Maltese</option>\n                <option value=\"Maori\">Maori</option>\n                <option value=\"Marathi\">Marathi</option>\n                <option value=\"Mongolian\">Mongolian</option>\n                <option value=\"Nepali\">Nepali</option>\n                <option value=\"Norwegian\">Norwegian</option>\n                <option value=\"Persian\">Persian</option>\n                <option value=\"Polish\">Polish</option>\n                <option value=\"Portuguese\">Portuguese</option>\n                <option value=\"Punjabi\">Punjabi</option>\n                <option value=\"Quechua\">Quechua</option>\n                <option value=\"Romanian\">Romanian</option>\n                <option value=\"Russian\">Russian</option>\n                <option value=\"Samoan\">Samoan</option>\n                <option value=\"Serbian\">Serbian</option>\n                <option value=\"Slovak\">Slovak</option>\n                <option value=\"Slovenian\">Slovenian</option>\n                <option value=\"Spanish\">Spanish</option>\n                <option value=\"Swahili\">Swahili</option>\n                <option value=\"Swedish \">Swedish </option>\n                <option value=\"Tamil\">Tamil</option>\n                <option value=\"Tatar\">Tatar</option>\n                <option value=\"Telugu\">Telugu</option>\n                <option value=\"Thai\">Thai</option>\n                <option value=\"Tibetan\">Tibetan</option>\n                <option value=\"Tonga\">Tonga</option>\n                <option value=\"Turkish\">Turkish</option>\n                <option value=\"Ukrainian\">Ukrainian</option>\n                <option value=\"Urdu\">Urdu</option>\n                <option value=\"Uzbek\">Uzbek</option>\n                <option value=\"Vietnamese\">Vietnamese</option>\n                <option value=\"Welsh\">Welsh</option>\n                      <option value=\"Xhosa\">Xhosa</option>\n            </select>\n          </div>\n          <div>\n            <label for=\"other_language2\">Other Language 2:</label>\n            <select id=\"other_language2\" name=\"other_language2\">\n              <option value=\"\">Select</option>\n                <option value=\"English\">English</option>\n                <option value=\"Afrikaans\">Afrikaans</option>\n                <option value=\"Albanian\">Albanian</option>\n                <option value=\"Arabic\">Arabic</option>\n                <option value=\"Armenian\">Armenian</option>\n                <option value=\"Basque\">Basque</option>\n                <option value=\"Bengali\">Bengali</option>\n                <option value=\"Bulgarian\">Bulgarian</option>\n                <option value=\"Catalan\">Catalan</option>\n                <option value=\"Cambodian\">Cambodian</option>\n                <option value=\"Chinese (Mandarin)\">Chinese (Mandarin)</option>\n                <option value=\"Croatian\">Croatian</option>\n                <option value=\"Czech\">Czech</option>\n                <option value=\"Danish\">Danish</option>\n                <option value=\"Dutch\">Dutch</option>\n                <option value=\"Estonian\">Estonian</option>\n                <option value=\"Fiji\">Fiji</option>\n                <option value=\"Finnish\">Finnish</option>\n                <option value=\"French\">French</option>\n                <option value=\"Georgian\">Georgian</option>\n                <option value=\"German\">German</option>\n                <option value=\"Greek\">Greek</option>\n                <option value=\"Gujarati\">Gujarati</option>\n                <option value=\"Hebrew\">Hebrew</option>\n                <option value=\"Hindi\">Hindi</option>\n                <option value=\"Hungarian\">Hungarian</option>\n                <option value=\"Icelandic\">Icelandic</option>\n                <option value=\"Indonesian\">Indonesian</option>\n                <option value=\"Irish\">Irish</option>\n                <option value=\"Italian\">Italian</option>\n                <option value=\"Japanese\">Japanese</option>\n                <option value=\"Javanese\">Javanese</option>\n                <option value=\"Korean\">Korean</option>\n                <option value=\"Latin\">Latin</option>\n                <option value=\"Latvian\">Latvian</option>\n                <option value=\"Lithuanian\">Lithuanian</option>\n                <option value=\"Macedonian\">Macedonian</option>\n                <option value=\"Malay\">Malay</option>\n                <option value=\"Malayalam\">Malayalam</option>\n                <option value=\"Maltese\">Maltese</option>\n                <option value=\"Maori\">Maori</option>\n                <option value=\"Marathi\">Marathi</option>\n                <option value=\"Mongolian\">Mongolian</option>\n                <option value=\"Nepali\">Nepali</option>\n                <option value=\"Norwegian\">Norwegian</option>\n                <option value=\"Persian\">Persian</option>\n                <option value=\"Polish\">Polish</option>\n                <option value=\"Portuguese\">Portuguese</option>\n                <option value=\"Punjabi\">Punjabi</option>\n                <option value=\"Quechua\">Quechua</option>\n                <option value=\"Romanian\">Romanian</option>\n                <option value=\"Russian\">Russian</option>\n                <option value=\"Samoan\">Samoan</option>\n                <option value=\"Serbian\">Serbian</option>\n                <option value=\"Slovak\">Slovak</option>\n                <option value=\"Slovenian\">Slovenian</option>\n                <option value=\"Spanish\">Spanish</option>\n                <option value=\"Swahili\">Swahili</option>\n                <option value=\"Swedish \">Swedish </option>\n                <option value=\"Tamil\">Tamil</option>\n                <option value=\"Tatar\">Tatar</option>\n                <option value=\"Telugu\">Telugu</option>\n                <option value=\"Thai\">Thai</option>\n                <option value=\"Tibetan\">Tibetan</option>\n                <option value=\"Tonga\">Tonga</option>\n                <option value=\"Turkish\">Turkish</option>\n                <option value=\"Ukrainian\">Ukrainian</option>\n                <option value=\"Urdu\">Urdu</option>\n                <option value=\"Uzbek\">Uzbek</option>\n                <option value=\"Vietnamese\">Vietnamese</option>\n                <option value=\"Welsh\">Welsh</option>\n                <option value=\"Xhosa\">Xhosa</option>\n            </select>\n          </div>\n          <div>\n            <label for=\"other_language3\">Other Language 3:</label>\n            <select id=\"other_language3\" name=\"other_language3\">\n              <option value=\"\">Select</option>\n                <option value=\"English\">English</option>\n                <option value=\"Afrikaans\">Afrikaans</option>\n                <option value=\"Albanian\">Albanian</option>\n                <option value=\"Arabic\">Arabic</option>\n                <option value=\"Armenian\">Armenian</option>\n                <option value=\"Basque\">Basque</option>\n                <option value=\"Bengali\">Bengali</option>\n                <option value=\"Bulgarian\">Bulgarian</option>\n                <option value=\"Catalan\">Catalan</option>\n                <option value=\"Cambodian\">Cambodian</option>\n                <option value=\"Chinese (Mandarin)\">Chinese (Mandarin)</option>\n                <option value=\"Croatian\">Croatian</option>\n                <option value=\"Czech\">Czech</option>\n                <option value=\"Danish\">Danish</option>\n                <option value=\"Dutch\">Dutch</option>\n                <option value=\"Estonian\">Estonian</option>\n                <option value=\"Fiji\">Fiji</option>\n                <option value=\"Finnish\">Finnish</option>\n                <option value=\"French\">French</option>\n                <option value=\"Georgian\">Georgian</option>\n                <option value=\"German\">German</option>\n                <option value=\"Greek\">Greek</option>\n                <option value=\"Gujarati\">Gujarati</option>\n                <option value=\"Hebrew\">Hebrew</option>\n                <option value=\"Hindi\">Hindi</option>\n                <option value=\"Hungarian\">Hungarian</option>\n                <option value=\"Icelandic\">Icelandic</option>\n                <option value=\"Indonesian\">Indonesian</option>\n                <option value=\"Irish\">Irish</option>\n                <option value=\"Italian\">Italian</option>\n                <option value=\"Japanese\">Japanese</option>\n                <option value=\"Javanese\">Javanese</option>\n                <option value=\"Korean\">Korean</option>\n                <option value=\"Latin\">Latin</option>\n                <option value=\"Latvian\">Latvian</option>\n                <option value=\"Lithuanian\">Lithuanian</option>\n                <option value=\"Macedonian\">Macedonian</option>\n                <option value=\"Malay\">Malay</option>\n                <option value=\"Malayalam\">Malayalam</option>\n                <option value=\"Maltese\">Maltese</option>\n                <option value=\"Maori\">Maori</option>\n                <option value=\"Marathi\">Marathi</option>\n                <option value=\"Mongolian\">Mongolian</option>\n                <option value=\"Nepali\">Nepali</option>\n                <option value=\"Norwegian\">Norwegian</option>\n                <option value=\"Persian\">Persian</option>\n                <option value=\"Polish\">Polish</option>\n                <option value=\"Portuguese\">Portuguese</option>\n                <option value=\"Punjabi\">Punjabi</option>\n                <option value=\"Quechua\">Quechua</option>\n                <option value=\"Romanian\">Romanian</option>\n                <option value=\"Russian\">Russian</option>\n                <option value=\"Samoan\">Samoan</option>\n                <option value=\"Serbian\">Serbian</option>\n                <option value=\"Slovak\">Slovak</option>\n                <option value=\"Slovenian\">Slovenian</option>\n                <option value=\"Spanish\">Spanish</option>\n                <option value=\"Swahili\">Swahili</option>\n                <option value=\"Swedish \">Swedish </option>\n                <option value=\"Tamil\">Tamil</option>\n                <option value=\"Tatar\">Tatar</option>\n                <option value=\"Telugu\">Telugu</option>\n                <option value=\"Thai\">Thai</option>\n                <option value=\"Tibetan\">Tibetan</option>\n                <option value=\"Tonga\">Tonga</option>\n                <option value=\"Turkish\">Turkish</option>\n                <option value=\"Ukrainian\">Ukrainian</option>\n                <option value=\"Urdu\">Urdu</option>\n                <option value=\"Uzbek\">Uzbek</option>\n                <option value=\"Vietnamese\">Vietnamese</option>\n                <option value=\"Welsh\">Welsh</option>\n                <option value=\"Xhosa\">Xhosa</option>\n          </select>\n        </div>\n\n            <!-- 英語能力テストのセクション -->\n        <label>English Proficiency Test Scores (Optional):</label><br>\n        <div>\n          <label for=\"toefl_score\">TOEFL Score:</label>\n          <input type=\"number\" id=\"toefl_score\" name=\"toefl_score\" min=\"0\" max=\"120\">\n        </div>\n        <div>\n          <label for=\"toeic_score\">TOEIC Score:</label>\n          <input type=\"number\" id=\"toeic_score\" name=\"toeic_score\" min=\"0\" max=\"990\" step=\"5\">\n        </div>\n        <div>\n          <label for=\"ielts_score\">IELTS Score:</label>\n          <input type=\"number\" id=\"ielts_score\" name=\"ielts_score\" min=\"0\" max=\"9\" step=\"0.5\">\n        </div>\n      `,\n    button_label: \"Next\",\n    data: {\n      task: 'demographic_survey'\n    },\n    on_load: function () {\n      document.querySelectorAll('input[type=\"number\"]').forEach(input => {\n        input.addEventListener('input', function () {\n          // 小数点以下1桁まで許可（IELTS用）\n          this.value = this.value.replace(/[^0-9.]/g, '');\n          if (this.value.split('.')[1]?.length > 1) {\n            this.value = parseFloat(this.value).toFixed(1);\n          }\n        });\n      });\n    }\n  };\n\n  //実験同意画面\n  const consent_screen = {\n    type: jsPsychHtmlButtonResponse,\n    stimulus: `\n      <h2>Consent Form</h2>\n      <p><strong>The aim of this survey:</strong></p>\n      <p>We are conducting a survey to determine the most appropriate form of subtitles to assist with English listening comprehension.</p>\n      <p>The survey consists of one TOEFL listening section and six 1-min listening sections from televisions with some questions, and takes approximately 15 minutes to complete. There are no specific eligibility requirements.</p>\n      <p>The reward is 3.3 GBP or 3.6 GBP (10.00 GBP/h or 11.00 GBP/h), depending on your correct answer rate for comprehension quizzes in this survey.</p>\n      <p>We are also asking good scorers with productive comments for further 30 min - 1h online interview sessions (with rewards) in the near future.</p>\n      <p>We would be grateful for your cooperation with the survey.</p>\n      <p><strong>Contact:</strong></p>\n      <p>If you have any questions, comments, or requests regarding this survey, please contact:</p>\n      <p>Naoto Nishida<br>\n      Doctoral Student, Graduate School of Interdisciplinary Information Studies, The University of Tokyo<br>\n      Email: nawta@g.ecc.u-tokyo.ac.jp</p>\n      <p>Please indicate whether you agree to participate in this study.</p>\n    `,\n    choices: ['I agree', 'I do not agree'],\n    data: {\n      task: 'consent'\n    },\n    on_finish: function (data) {\n      if (data.response == 1) {\n        jsPsych.endExperiment('Thank you for your time. The completion code is CLIBK86T.');\n      }\n    }\n  };\n\n  //Likert尺度の視覚的補助用の\n  const coloredLikertCSS = `\n    <style>\n      .jspsych-survey-likert-statement {\n        margin-bottom: 1em;\n        text-align: center;\n      }\n      .jspsych-survey-likert-opts {\n        display: flex;\n        justify-content: center;\n        align-items: stretch;\n        margin: 0 auto;\n        width: 100%;\n        max-width: 800px;\n      }\n      .jspsych-survey-likert-opt-label {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        flex: 1;\n        padding: 10px 5px;\n        border-radius: 5px;\n        transition: background-color 0.3s;\n        color: black;\n        cursor: pointer;\n        margin: 0 2px;\n        text-align: center;\n        min-width: 80px; /* 最小幅を設定 */\n      }\n      .jspsych-survey-likert-opt-label input[type='radio'] {\n        margin-top: 5px;\n      }\n      .jspsych-survey-likert-opt-label:hover {\n        filter: brightness(90%);\n      }\n      .bg-very-low { background-color: rgba(26, 152, 80, 0.3); }\n      .bg-low { background-color: rgba(145, 207, 96, 0.3); }\n      .bg-slightly-low { background-color: rgba(217, 239, 139, 0.3); }\n      .bg-neutral { background-color: rgba(255, 255, 191, 0.3); }\n      .bg-slightly-high { background-color: rgba(254, 224, 139, 0.3); }\n      .bg-high { background-color: rgba(252, 141, 89, 0.3); }\n      .bg-very-high { background-color: rgba(215, 48, 39, 0.3); }\n    </style>\n    `;\n\n  const nasaTLXCSS = `\n    <style>\n\n      /* 擬似要素を無効化 */\n      .jspsych-survey-likert-opts::before,\n      .nasa-tlx-opts::before {\n        content: none !important;\n        display: none !important;\n      }\n      \n      .nasa-tlx-container {\n        max-width: 800px;\n        margin: 0 auto;\n      }\n      .nasa-tlx-question {\n        text-align: center;\n        margin-bottom: 1em;\n      }\n      .nasa-tlx-opts {\n        display: flex;\n        justify-content: center;\n        align-items: stretch;\n        margin: 0 auto;\n        width: 100%;\n      }\n      .nasa-tlx-opt-label {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        flex: 1;\n        padding: 10px 5px;\n        border-radius: 5px;\n        transition: background-color 0.3s;\n        color: black;\n        cursor: pointer;\n        margin: 0 2px;\n        text-align: center;\n        min-width: 80px;\n      }\n      .nasa-tlx-opt-label input[type='radio'] {\n        margin-top: 5px;\n      }\n    </style>\n    `;\n\n  const applyColorToLikertScale = () => {\n    document.querySelectorAll('.jspsych-survey-likert-statement, .nasa-tlx-question').forEach((statement) => {\n      const opts = statement.nextElementSibling;\n      opts.querySelectorAll('.jspsych-survey-likert-opt-label, .nasa-tlx-opt-label').forEach((label, index) => {\n        const colors = ['very-low', 'low', 'slightly-low', 'neutral', 'slightly-high', 'high', 'very-high'];\n        label.classList.add(`bg-${colors[index]}`);\n\n        // ラベル全体をクリック可能にする\n        label.addEventListener('click', (e) => {\n          if (e.target !== label.querySelector('input')) {\n            label.querySelector('input').click();\n          }\n        });\n      });\n    });\n  };\n\n\n  // TOEFLリスニング準備画面\n  const toefl_preparation = {\n    type: jsPsychHtmlButtonResponse,\n    stimulus: \"<h2>TOEFL Listening Question</h2><p>Here, you will now listen to a TOEFL Listening Section with 4-min audio. <strong>You can take notes.</strong><br>Are you ready?<br>Press the 'Start' button when you are ready to begin.</p>\",\n    choices: ['Start'],\n    data: {\n      task: 'toefl_preparation'\n    }\n  };\n\n  // TOEFLリスニング問題\n  const toefl_listening = {\n    timeline: [\n      {\n        type: jsPsychAudioKeyboardResponse,\n        stimulus: '/jspsych_vue_test/audio/toefl_audio.mp3', //questionData.toefl.audio\n        choices: \"NO_KEYS\",\n        trial_ends_after_audio: true,\n        prompt: function () {\n          return `\n            <div style=\"display: flex; flex-direction: column; align-items: center;\">\n              <img src=\"/jspsych_vue_test/image/toefl_image.jpg\" alt=\"TOEFL Listening Image\" style=\"max-width: 80%; height: auto; margin-bottom: 20px;\">\n              <p>Listen carefully to the audio. Questions will be displayed after it ends.</p>\n            </div>\n          `;\n        }, \n        data: {\n          task: 'toefl_listening_audio'\n        }\n      },\n      {\n        type: jsPsychHtmlButtonResponse,\n        stimulus: function () {\n          let questionsHtml = '';\n          questionData.toefl.questions.forEach((q, index) => {\n            const shuffledOptions = shuffleArray([...q.options]);\n            questionsHtml += `<div class=\"question\">\n            <p>${index + 1}. ${q.prompt}</p>\n            <div class=\"options\" id=\"options_${index}\">\n              ${shuffledOptions.map(option => `\n                <button class=\"option-button\" data-question=\"${index}\" data-option=\"${option}\">${option}</button>\n              `).join('')}\n            </div>\n            ${q.multiple ? '<p>(You can select multiple options)</p>' : ''}\n          </div>`;\n          });\n          return questionsHtml;\n        },\n        choices: ['Submit'],\n        button_html: '<button class=\"jspsych-btn\">%choice%</button>',\n        on_load: function () {\n          this.selections = questionData.toefl.questions.map(() => []);\n          document.querySelectorAll('.option-button').forEach(button => {\n            button.addEventListener('click', (event) => {\n              const questionIndex = parseInt(event.target.getAttribute('data-question'));\n              const option = event.target.getAttribute('data-option');\n              const isMultiple = questionData.toefl.questions[questionIndex].multiple;\n\n              if (isMultiple) {\n                const index = this.selections[questionIndex].indexOf(option);\n                if (index > -1) {\n                  this.selections[questionIndex].splice(index, 1);\n                  event.target.classList.remove('selected');\n                } else {\n                  this.selections[questionIndex].push(option);\n                  event.target.classList.add('selected');\n                }\n              } else {\n                document.querySelectorAll(`#options_${questionIndex} .option-button`).forEach(btn => {\n                  btn.classList.remove('selected');\n                });\n                this.selections[questionIndex] = [option];\n                event.target.classList.add('selected');\n              }\n\n              // 全ての質問に回答されているかチェック\n              const allAnswered = this.selections.every(selection => selection.length > 0);\n              document.querySelector('.jspsych-btn').disabled = !allAnswered;\n            });\n          });\n\n          // Submit ボタンを初期状態で無効化\n          document.querySelector('.jspsych-btn').disabled = true;\n        },\n        on_finish: function (data) {\n          // console.log('Raw data:', data); // デバッグ用\n\n          if (!this.selections || this.selections.length === 0) {\n            console.error('No responses recorded');\n            data.correct = false;\n            data.num_correct = 0;\n            return;\n          }\n\n          data.user_selections = this.selections;\n          // console.log('User selections:', data.user_selections); // デバッグ用\n\n          data.correct = questionData.toefl.questions.every((q, index) => {\n            if (!data.user_selections[index] || data.user_selections[index].length === 0) {\n              console.warn(`No response for question ${index + 1}`);\n              return false;\n            }\n            if (q.multiple) {\n              return JSON.stringify(data.user_selections[index].sort()) === JSON.stringify(q.correct_answer.sort());\n            } else {\n              return data.user_selections[index][0] === q.correct_answer;\n            }\n          });\n\n          data.num_correct = questionData.toefl.questions.filter((q, index) => {\n            if (!data.user_selections[index] || data.user_selections[index].length === 0) {\n              return false;\n            }\n            if (q.multiple) {\n              return JSON.stringify(data.user_selections[index].sort()) === JSON.stringify(q.correct_answer.sort());\n            } else {\n              return data.user_selections[index][0] === q.correct_answer;\n            }\n          }).length;\n\n          // console.log('Processed data:', data); // デバッグ用\n        }\n      }\n    ]\n  };\n\n  // NASA-TLXに入れるダミー質問\n  function generateDummyQuestionForNASATLX() {\n    return {\n      prompt: \"For this question, please select 'Slightly Low'.\",\n      name: 'dummy',\n      labels: [\"Very Low\", \"Low\", \"Slightly Low\", \"Neutral\", \"Slightly High\", \"High\", \"Very High\"],\n      required: true\n    };\n  }\n\n  // NASA-TLX質問の定義\n  const createNasaTLX = () => {\n    const generateQuestions = () => {\n      // console.log('Generating NASA-TLX questions');\n      let questions = [\n        {\n          prompt: \"Mental Demand: How much mental and perceptual activity was required?\",\n          name: 'mental_demand',\n          labels: [\"Very Low\", \"Low\", \"Slightly Low\", \"Neutral\", \"Slightly High\", \"High\", \"Very High\"],\n          required: true\n        },\n        {\n          prompt: \"Physical Demand: How much physical activity was required?\",\n          name: 'physical_demand',\n          labels: [\"Very Low\", \"Low\", \"Slightly Low\", \"Neutral\", \"Slightly High\", \"High\", \"Very High\"],\n          required: true\n        },\n        {\n          prompt: \"Temporal Demand: How much time pressure did you feel due to the pace at which the tasks or task elements occurred?\",\n          name: 'temporal_demand',\n          labels: [\"Very Low\", \"Low\", \"Slightly Low\", \"Neutral\", \"Slightly High\", \"High\", \"Very High\"],\n          required: true\n        },\n        {\n          prompt: \"Performance: How successful do you think you were in accomplishing the goals of the task set by the experimenter (or yourself)?\",\n          name: 'performance',\n          labels: [\"Perfect\", \"Good\", \"Slightly Good\", \"Neutral\", \"Slightly Bad\", \"Bad\", \"Failure\"],\n          required: true\n        },\n        {\n          prompt: \"Effort: How hard did you have to work to accomplish your level of performance?\",\n          name: 'effort',\n          labels: [\"Very Low\", \"Low\", \"Slightly Low\", \"Neutral\", \"Slightly High\", \"High\", \"Very High\"],\n          required: true\n        },\n        {\n          prompt: \"Frustration: How insecure, discouraged, irritated, stressed, and annoyed were you?\",\n          name: 'frustration',\n          labels: [\"Very Low\", \"Low\", \"Slightly Low\", \"Neutral\", \"Slightly High\", \"High\", \"Very High\"],\n          required: true\n        }\n      ];\n\n      // 40%の確率でダミー質問を追加\n      if (Math.random() < 0.4) {\n        questions.splice(Math.floor(Math.random() * questions.length), 0, generateDummyQuestionForNASATLX());\n      }\n\n      // console.log('Generated NASA-TLX questions:', questions);\n      return questions;\n    };\n\n    const questions = generateQuestions();\n\n    return {\n      type: jsPsychSurveyLikert,\n      preamble: coloredLikertCSS + nasaTLXCSS + \"<p>Please rate the workload you experienced <strong>while listening to the audio and reading the subtitles:</strong></p>\",\n      questions: questions,\n      data: function () {\n        // console.log('Executing data function for NASA-TLX');\n        return {\n          task: 'nasa_tlx',\n          has_dummy: questions.some(q => q && q.name === 'dummy')\n        };\n      },\n      on_finish: function (data) {\n        if (data.has_dummy) {\n          const dummyQuestion = questions.find(q => q.name === 'dummy');\n          if (dummyQuestion) {\n            const correctIndex = dummyQuestion.labels.indexOf('Slightly Low');\n            data.dummy_correct = data.response.dummy === correctIndex;\n          } else {\n            console.error('Dummy question not found in NASA-TLX');\n          }\n        }\n      },\n      button_label: 'Continue',\n      on_load: function () {\n        // console.log('Loading NASA-TLX questions');\n\n        setTimeout(() => {\n          // ラベルに色を適用\n          applyColorToLikertScale();\n          // NASA-TLX特有のスタイル適用\n          document.querySelectorAll('.jspsych-survey-likert-statement').forEach(statement => {\n            statement.classList.add('nasa-tlx-question');\n          });\n          document.querySelectorAll('.jspsych-survey-likert-opts').forEach(opts => {\n            opts.classList.add('nasa-tlx-opts');\n          });\n          document.querySelectorAll('.jspsych-survey-likert-opt-label').forEach(label => {\n            label.classList.add('nasa-tlx-opt-label');\n          });\n\n          const continueButton = document.querySelector('button[form=\"jspsych-survey-likert-form\"]');\n          if (continueButton) {\n            continueButton.disabled = true;\n\n            document.querySelectorAll('input[type=\"radio\"]').forEach(input => {\n              input.addEventListener('change', checkAllAnswered);\n            });\n\n            function checkAllAnswered() {\n              const allAnswered = Array.from(document.querySelectorAll('.jspsych-survey-likert-question')).every(question =>\n                question.querySelector('input:checked')\n              );\n              continueButton.disabled = !allAnswered;\n            }\n          }\n        }, 0);\n      }\n    };\n  };\n  // 使用時\n  const nasa_tlx = createNasaTLX();\n\n\n\n  // ビデオ視聴に関する集中度合いとか聞く質問に入れるダミー質問\n  function generateDummyQuestionForWorkloadQuestionnaire() {\n    return {\n      prompt: \"For this question, please select 'Barely'.\",\n      name: 'dummy',\n      labels: [\"Completely\", \"Mostly\", \"Somewhat\", \"Neutral\", \"Slightly\", \"Barely\", \"Not at all\"],\n      required: true\n    }\n  }\n\n  // 動画に関する質問の定義\n  const createVideoQuestions = () => {\n      const generateQuestions = () => {\n        // console.log('Generating video questions');  // デバッグ用\n        let questions = [\n          {\n            prompt: \"How well did you understand the content of the video?\",\n            name: 'comprehension',\n            labels: [\"Completely\", \"Mostly\", \"Somewhat\", \"Neutral\", \"Slightly\", \"Barely\", \"Not at all\"],\n            required: true\n          },\n          {\n            prompt: \"How engaged were you with the video?\",\n            name: 'engagement',\n            labels: [\"Completely\", \"Mostly\", \"Somewhat\", \"Neutral\", \"Slightly\", \"Barely\", \"Not at all\"],\n            required: true\n          },\n          {\n            prompt: \"How would you rate the readability of the video content?\",\n            name: 'readability',\n            labels: [\"Perfect\", \"Good\", \"Slightly Good\", \"Neutral\", \"Slightly Bad\", \"Bad\", \"Failure\"],\n            required: true\n          }\n        ];\n        // 40%の確率でダミー質問を追加\n        if (Math.random() < 0.4) {\n          questions.splice(Math.floor(Math.random() * questions.length), 0, generateDummyQuestionForWorkloadQuestionnaire());\n        }\n\n        // console.log('Generated questions:', questions);\n        return questions;\n      };\n\n\n      const questions = generateQuestions();\n\n      return {\n        type: jsPsychSurveyLikert,\n        questions: questions,\n        preamble: coloredLikertCSS,\n        data: function () {\n          // console.log('Executing data function for video_questions');\n          return {\n            task: 'video_questions',\n            has_dummy: questions.some(q => q && q.name === 'dummy')\n          };\n        },\n        on_finish: function (data) {\n          if (data.has_dummy) {\n            const dummyQuestion = questions.find(q => q.name === 'dummy');\n            if (dummyQuestion) {\n              const correctIndex = dummyQuestion.labels.indexOf('Barely');\n              data.dummy_correct = data.response.dummy === correctIndex;\n            } else {\n              console.error('Dummy question not found in video questions');\n            }\n          }\n        },\n      button_label: 'Continue',\n      on_load: function () {\n        // console.log('Loading video_questions');  // デバッグ用\n        setTimeout(() => {\n\n          // ラベルに色を適用\n          applyColorToLikertScale();\n\n          const continueButton = document.querySelector('button[form=\"jspsych-survey-likert-form\"]');\n          if (continueButton) {\n            continueButton.disabled = true;\n\n            document.querySelectorAll('input[type=\"radio\"]').forEach(input => {\n              input.addEventListener('change', checkAllAnswered);\n            });\n\n            function checkAllAnswered() {\n              const allAnswered = Array.from(document.querySelectorAll('.jspsych-survey-likert-question')).every(question =>\n                question.querySelector('input:checked')\n              );\n              continueButton.disabled = !allAnswered;\n            }\n          }\n        }, 0);\n      }\n    };\n  }\n  const video_questions = createVideoQuestions();\n\n\n\n\n  // 実験の開始\n  // instruction\n  const video_trial_instruction = {\n    type: jsPsychHtmlButtonResponse,\n    stimulus: `\n    <p>You will now listen to 6 news audio clips with speech-recognized subtitles. Each clip has 1 min audio. After each clip, you will take a comprehension test <strong>extracted from important key phrases in the passages</strong>, \n    followed by a survey about the readability of the subtitles, your subjective understanding, engagement level, \n    and workload when using the subtitles.</p>\n    <p>There are three types of subtitles: regular subtitles (normal), those that extract keywords only (keyword), and those that emphasize important keywords (dynamik, originated in a terminology for music). Please note that there may be some misrecognition in the subtitles.</p>\n    <p><strong>You cannot take notes in this section.</strong></p>\n    <p>In the following trials, please pay attention to the differences between the three conditions (Normal, Keyword, Dynamik):</p>\n    <div style=\"display: flex; flex-direction: column; align-items: center; margin-top: 20px;\">\n      <div style=\"margin-bottom: 20px;\">\n        <img src=\"/jspsych_vue_test/image/normal.jpg\" alt=\"Normal condition\" style=\"width: 100%; max-width: 600px; height: auto;\">\n        <p style=\"color: red; font-weight: bold; text-align: center; margin-top: 10px;\">Normal</p>\n      </div>\n      <div style=\"margin-bottom: 20px;\">\n        <img src=\"/jspsych_vue_test/image/keyword.jpg\" alt=\"Keyword condition\" style=\"width: 100%; max-width: 600px; height: auto;\">\n        <p style=\"color: blue; font-weight: bold; text-align: center; margin-top: 10px;\">Keyword</p>\n      </div>\n      <div>\n        <img src=\"/jspsych_vue_test/image/dynamik.jpg\" alt=\"Dynamik condition\" style=\"width: 100%; max-width: 600px; height: auto;\">\n        <p style=\"color: green; font-weight: bold; text-align: center; margin-top: 10px;\">Dynamik</p>\n      </div>\n    </div>\n    <p>Press the Start button when you are ready.</p>\n  `,\n    choices: ['Start']\n  };\n\n  // CNN動画の選択とランダム化\n  const selected_videos = selectAndRandomizeCNNVideos(questionData);\n  // console.log('Selected videos:', selected_videos);  // デバッグ用\n\n  // CNN動画とそれに関連する質問のタイムライン\n  const video_trial = {\n    timeline: [\n      {\n        type: jsPsychVideoKeyboardResponse,\n        stimulus: function () {\n          // console.log('Video stimulus:', jsPsych.timelineVariable('video'));  // デバッグ用\n          return [jsPsych.timelineVariable('video')];\n        },\n        choices: \"NO_KEYS\",\n        trial_ends_after_video: true,\n        prompt: function () {\n          const condition = jsPsych.timelineVariable('condition');\n          let color;\n          switch (condition) {\n            case 'normal':\n              color = 'red';\n              break;\n            case 'keyword':\n              color = 'blue';\n              break;\n            case 'dynamik':\n              color = 'green';\n              break;\n            default:\n              color = 'black';\n          }\n          return `\n          <div style=\"position: relative; width: 100%; height: 40px;\">\n            <div style=\"position: absolute; top: 0; left: 50%; transform: translateX(-50%); background-color: rgba(255,255,255,0.7); padding: 5px; z-index: 1000;\">\n              <p style=\"margin: 0; color: ${color}; font-weight: bold;\">Condition: ${condition}</p>\n            </div>\n          </div>\n          <div style=\"position: relative;\">\n            <video id=\"jspsych-video-keyboard-response-stimulus\" style=\"display: block; margin: 0 auto;\">\n              <!-- video content -->\n            </video>\n            <div style=\"position: absolute; bottom: 40px; left: 0; right: 0; text-align: center;\">\n              <p style=\"background-color: rgba(0,0,0,0.7); color: white; padding: 5px; margin: 0; font-size: 16px;\">Please watch the video carefully. Questions will appear after the end.</p>\n            </div>\n          </div>\n        `;\n        }, \n        data: function () {\n          return {\n            task: 'cnn_video',\n            condition: jsPsych.timelineVariable('condition'),\n            video_number: jsPsych.timelineVariable('number')\n          };\n        }\n      },\n      video_questions,\n      {\n        type: jsPsychSurveyMultiChoice,\n        questions: function () {\n          return jsPsych.timelineVariable('questions').map(q => ({\n            ...q,\n            options: shuffleArray([...q.options])\n          }));\n        },\n        data: function () {\n          // console.log('Multiple choice questions:', jsPsych.timelineVariable('questions'));\n          return {\n            task: 'cnn_video_questions',\n            condition: jsPsych.timelineVariable('condition'),\n            video_number: jsPsych.timelineVariable('number'),\n            correct_answers: jsPsych.timelineVariable('questions').map(q => q.correct_answer)\n          };\n        },\n        button_label: 'Continue',\n        on_load: function () {\n          setTimeout(() => {\n            const continueButton = document.querySelector('#jspsych-survey-multi-choice-next');\n            if (continueButton) {\n              continueButton.disabled = true;\n\n              document.querySelectorAll('input[type=\"radio\"]').forEach(input => {\n                input.addEventListener('change', checkAllAnswered);\n              });\n\n              function checkAllAnswered() {\n                const allAnswered = Array.from(document.querySelectorAll('.jspsych-survey-multi-choice-question')).every(question =>\n                  question.querySelector('input:checked')\n                );\n                continueButton.disabled = !allAnswered;\n              }\n            }\n          }, 0);\n        },\n        on_finish: function (data) {\n          const responses = Object.values(data.response);\n          const correct_answers = data.correct_answers;\n\n          data.correct = responses.every((response, index) =>\n            response === correct_answers[index]\n          );\n          data.num_correct = responses.filter((response, index) =>\n            response === correct_answers[index]\n          ).length;\n        }\n      },\n      nasa_tlx\n    ],\n    timeline_variables: selected_videos\n  };\n\n\n  // 字幕の好みに関するアンケート\n  const subtitle_preference_survey = {\n    type: jsPsychSurveyHtmlForm,\n    preamble: \"<p>Please rank the three types of subtitles in order of preference <strong>(1 being the most preferred, 3 being the least preferred)</strong>. Each rank should be used exactly once:</p>\",\n    html: `\n    <div>\n      <label for=\"normal\" style=\"color: red;\">Regular subtitles (Normal): </label>\n      <select id=\"normal\" name=\"normal\" required>\n        <option value=\"\">Select</option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"keyword\" style=\"color: blue;\">Keyword-only subtitles (Keyword): </label>\n      <select id=\"keyword\" name=\"keyword\" required>\n        <option value=\"\">Select</option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"dynamik\" style=\"color: green;\">Emphasized keywords subtitles (Dynamik): </label>\n      <select id=\"dynamik\" name=\"dynamik\" required>\n        <option value=\"\">Select</option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n      </select>\n    </div>\n    <div style=\"margin-top: 20px;\">\n      <label for=\"reason\">Please explain the reason for your ranking:</label>\n      <textarea id=\"reason\" name=\"reason\" rows=\"4\" cols=\"50\" required></textarea>\n    </div>\n  `,\n    button_label: 'Submit',\n    data: {\n      task: 'subtitle_preference'\n    },\n    on_load: function () {\n      const selects = document.querySelectorAll('select');\n      selects.forEach(select => {\n        select.addEventListener('change', function () {\n          const selectedValues = Array.from(selects).map(s => s.value).filter(v => v !== \"\");\n          const uniqueValues = new Set(selectedValues);\n          if (selectedValues.length !== uniqueValues.size) {\n            alert(\"Please use each rank (1, 2, 3) exactly once.\");\n            this.value = \"\";\n          }\n        });\n      });\n    },\n    on_finish: function (data) {\n      const responses = Object.values(data.response);\n      const rankResponses = responses.slice(0, 3);  // 最初の3つの応答（ランキング）\n      const reasonResponse = responses[3];  // 4番目の応答（理由）\n      if (new Set(rankResponses).size !== 3 || rankResponses.includes(\"\")) {\n        alert(\"Please rank all subtitle types using each rank (1, 2, 3) exactly once before submitting.\");\n        this.repeat_trial();\n      } else if (reasonResponse.trim() === \"\") {\n        alert(\"Please provide a reason for your ranking.\");\n        this.repeat_trial();\n      }\n    }\n  };\n\n  const final_feedback = {\n    type: jsPsychSurveyText,\n    questions: [\n      {\n        prompt: \"Please share your overall thoughts about the experiment:\",\n        rows: 5,\n        columns: 50,\n        required: false\n      }\n    ],\n    data: {\n      task: 'final_feedback'\n    },\n    on_load: function () {\n      const textarea = document.querySelector('textarea');\n      const maxLength = 1000; // 最大文字数を設定\n\n      textarea.addEventListener('input', function () {\n        // 入力文字数を制限\n        if (this.value.length > maxLength) {\n          this.value = this.value.slice(0, maxLength);\n        }\n\n        // 残り文字数を表示\n        const remainingChars = maxLength - this.value.length;\n        let remainingCharsDisplay = document.getElementById('remaining-chars');\n        if (!remainingCharsDisplay) {\n          remainingCharsDisplay = document.createElement('div');\n          remainingCharsDisplay.id = 'remaining-chars';\n          this.parentNode.insertBefore(remainingCharsDisplay, this.nextSibling);\n        }\n        remainingCharsDisplay.textContent = `Remaining characters: ${remainingChars}`;\n      });\n    },\n    on_finish: function (data) {\n      // 入力をサニタイズ\n      const sanitizedInput = DOMPurify.sanitize(data.response.Q0);\n\n      // HTMLエンティティをエスケープ\n      const escapedInput = escapeHTML(sanitizedInput);\n\n      // サニタイズされた入力で元のレスポンスを上書き\n      data.response.Q0 = escapedInput;\n    }\n  };\n\n  // HTMLをエスケープする関数\n  function escapeHTML(str) {\n    return str.replace(/[&<>'\"]/g,\n      tag => ({\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        \"'\": '&#39;',\n        '\"': '&quot;'\n      }[tag] || tag)\n    );\n  }\n\n  // DOMPurifyライブラリを読み込む\n  const script = document.createElement('script');\n  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.3.3/purify.min.js';\n  document.head.appendChild(script);\n\n\n  // データの保存設定\n  // const csv_filename = `${subject_id}.csv`;\n  const json_filename = `${subject_id}.json`;\n  const save_data_osf = {\n    timeline: [\n      // {\n      //   type: jsPsychPipe,\n      //   action: \"save\",\n      //   experiment_id: \"TBg2nxpISAoQ\",\n      //   filename: csv_filename,\n      //   data_string: () => jsPsych.data.get().csv()\n      // },\n      {\n        type: jsPsychPipe,\n        action: \"save\",\n        experiment_id: \"TBg2nxpISAoQ\",\n        filename: json_filename,\n        data_string: () => jsPsych.data.get().json(),\n        data_format: 'json'\n      }\n    ]\n  };\n\n  // データをローカルに保存\n  const save_data_locally = {\n    type: jsPsychCallFunction,\n    func: function (data) {\n      // let csvData = jsPsych.data.get().csv();\n      let jsonData = JSON.stringify(jsPsych.data.get());\n\n      // CSV保存\n      // let csvBlob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n      // let csvUrl = URL.createObjectURL(csvBlob);\n      // let csvLink = document.createElement(\"a\");\n      // csvLink.href = csvUrl;\n      // csvLink.download = `./exp_data/${subject_id}.csv`;\n      // csvLink.click();\n\n      // JSON保存\n      let jsonBlob = new Blob([jsonData], { type: 'application/json' });\n      let jsonUrl = URL.createObjectURL(jsonBlob);\n      let jsonLink = document.createElement(\"a\");\n      jsonLink.href = jsonUrl;\n      jsonLink.download = `../exp_data/${subject_id}.json`;\n      jsonLink.click();\n    }\n  };\n\n  //実験終了画面\n  function getCompletionCode(cnn_correct_ratio, allDummyCorrect, consented) {\n    if (!consented) return 'CLIBK86T';\n    if (!allDummyCorrect) return 'CJ73C0P5';\n    if (cnn_correct_ratio >= 0.8) return 'C88OJ915';\n    return 'C9IQ6OIZ';\n  }\n\n  const end_screen = {\n    type: jsPsychHtmlKeyboardResponse,\n    stimulus: function () {\n      const cnn_correct_ratio = jsPsych.data.get().filter({ task: 'cnn_video_questions' }).select('correct').mean();\n      const dummyResponses = jsPsych.data.get().filter({ has_dummy: true });\n      const allDummyCorrect = dummyResponses.values().every(trial => trial.dummy_correct === true);\n\n      // 同意画面のデータ取得を修正\n      const consentData = jsPsych.data.get().filter({ task: 'consent' }).values()[0];\n      const consented = consentData ? consentData.response === 0 : true;  // データがない場合はデフォルトで同意したとみなす\n\n      const completion_code = getCompletionCode(cnn_correct_ratio, allDummyCorrect, consented);\n\n      return `\n        <h2>Experiment Completed</h2>\n        <p>Your data has been successfully submitted.</p>\n        <p>Your completion code is: ${completion_code}</p>\n        <p>Thank you for your participation!</p>\n      `;\n    },\n    choices: \"NO_KEYS\"\n  };\n\n\n  // 実験の全体的な流れを定義\n  const timeline = [\n    add_subject_id,\n    consent_screen,\n    welcome,\n    demographic_survey,\n    toefl_preparation,\n    toefl_listening,\n    video_trial_instruction,\n    video_trial,\n    subtitle_preference_survey,\n    final_feedback,\n    save_data_osf,\n    // save_data_locally,\n    end_screen\n  ];\n\n  // console.log('experiment.js: Experiment timeline created:', timeline);\n  return timeline;\n}\n","import { render } from \"./App.vue?vue&type=template&id=81b84a94\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ParameterType } from 'jspsych';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nconst info = {\n    name: \"pipe\",\n    parameters: {\n        /**\n         * The 12-character experiment ID provided by pipe.jspsych.org.\n         */\n        experiment_id: {\n            type: ParameterType.STRING,\n            default: undefined,\n        },\n        /**\n         * The action to take. Can be `\"save\"`, `\"saveBase64\"`, or `\"condition\"`.\n         * If `\"save\"`, the data will be saved to the OSF.\n         * If `\"saveBase64\"`, the data should be a base64-encoded string and will be decoded to binary before being saved to the OSF.\n         * If `\"condition\"`, this will get the next condition for the experiment and save it in the data for this trial.\n         */\n        action: {\n            type: ParameterType.STRING,\n            default: undefined,\n        },\n        /**\n         * Name of the file to create on the OSF. It should include the extension.\n         * If the file already exists, no data will be saved.\n         */\n        filename: {\n            type: ParameterType.STRING,\n            default: null,\n        },\n        /**\n         * A string-based representation of the data to save.\n         *\n         * To save JSON, you can use `()=>jsPsych.data.get().json()`.\n         * To save CSV, you can use `()=>jsPsych.data.get().csv()`.\n         *\n         * The use of a function is necessary to get the updated data at\n         * the time of saving.\n         */\n        data_string: {\n            type: ParameterType.STRING,\n            default: null,\n        },\n        /**\n         * An HTML message to be displayed above the loading graphics in the experiment during data upload.\n         */\n        wait_message: {\n            type: ParameterType.HTML_STRING,\n            default: `<p>Saving data. Please do not close this page.</p>`,\n        },\n    },\n};\n/**\n * **jsPsychPipe**\n *\n * This plugin facilitates communication with DataPipe (https://pipe.jspsych.org), a tool for\n * sending data from jsPsych experiments to the OSF (https://osf.io/). You will need a DataPipe\n * account to use this plugin.\n *\n * @author Josh de Leeuw\n * @see {@link https://DOCUMENTATION_URL DOCUMENTATION LINK TEXT}\n */\nclass PipePlugin {\n    constructor(jsPsych) {\n        this.jsPsych = jsPsych;\n    }\n    trial(display_element, trial) {\n        this.run(display_element, trial);\n    }\n    run(display_element, trial) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // show circular progress bar\n            const progressCSS = `\n      .spinner {\n        animation: rotate 2s linear infinite;\n        width: 50px;\n        height: 50px;\n      }\n        \n      .spinner .path {\n        stroke: rgb(25,25,25);\n        stroke-linecap: round;\n        animation: dash 1.5s ease-in-out infinite;\n      }\n\n      @keyframes rotate {\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n      \n      @keyframes dash {\n        0% {\n          stroke-dasharray: 1, 150;\n          stroke-dashoffset: 0;\n        }\n        50% {\n          stroke-dasharray: 90, 150;\n          stroke-dashoffset: -35;\n        }\n        100% {\n          stroke-dasharray: 90, 150;\n          stroke-dashoffset: -124;\n        }\n      }\n    `;\n            const progressHTML = `\n    <style>${progressCSS}</style>\n      ${trial.wait_message}\n      <svg class=\"spinner\" viewBox=\"0 0 50 50\">\n        <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\n      </svg>`;\n            display_element.innerHTML = progressHTML;\n            let result;\n            if (trial.action === \"save\") {\n                result = yield PipePlugin.saveData(trial.experiment_id, trial.filename, trial.data_string);\n            }\n            if (trial.action === \"saveBase64\") {\n                result = yield PipePlugin.saveBase64Data(trial.experiment_id, trial.filename, trial.data_string);\n            }\n            if (trial.action === \"condition\") {\n                result = yield PipePlugin.getCondition(trial.experiment_id);\n            }\n            display_element.innerHTML = \"\";\n            // data saving\n            var trial_data = {\n                result: result,\n                success: result.error ? false : true,\n            };\n            // end trial\n            this.jsPsych.finishTrial(trial_data);\n        });\n    }\n    /**\n     * Save data to the OSF using pipe.jspsych.org.\n     *\n     * @param expID The 12-character experiment ID provided by pipe.jspsych.org.\n     * @param filename A unique filename to save the data to. It should include the extension.\n     * @param data The data as a string. Any text-basd format (e.g., JSON, CSV, TXT) is acceptable.\n     * @returns The response from the server.\n     */\n    static saveData(expID, filename, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!expID || !filename || !data) {\n                throw new Error(\"Missing required parameter(s).\");\n            }\n            let response;\n            try {\n                response = yield fetch(\"https://pipe.jspsych.org/api/data/\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"*/*\",\n                    },\n                    body: JSON.stringify({\n                        experimentID: expID,\n                        filename: filename,\n                        data: data,\n                    }),\n                });\n            }\n            catch (error) {\n                return error;\n            }\n            return yield response.json();\n        });\n    }\n    /**\n     * Save base64-encoded data to the OSF using pipe.jspsych.org.\n     *\n     * @param expID The 12-character experiment ID provided by pipe.jspsych.org.\n     * @param filename A unique filename to save the data to. It should include the extension.\n     * @param data The data as a base64-encoded string. It will be decoded by the server before being stored in the OSF.\n     * @returns The response from the server.\n     */\n    static saveBase64Data(expID, filename, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!expID || !filename || !data) {\n                throw new Error(\"Missing required parameter(s).\");\n            }\n            let response;\n            try {\n                response = yield fetch(\"https://pipe.jspsych.org/api/base64/\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"*/*\",\n                    },\n                    body: JSON.stringify({\n                        experimentID: expID,\n                        filename: filename,\n                        data: data,\n                    }),\n                });\n            }\n            catch (error) {\n                return error;\n            }\n            return yield response.json();\n        });\n    }\n    /**\n     * Get the condition assignment for the current participant using pipe.jspsych.org.\n     *\n     * @param expID The 12-character experiment ID provided by pipe.jspsych.org.\n     * @returns The condition assignment as an integer.\n     */\n    static getCondition(expID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!expID) {\n                throw new Error(\"Missing required parameter(s).\");\n            }\n            let response;\n            try {\n                response = yield fetch(\"https://pipe.jspsych.org/api/condition/\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"*/*\",\n                    },\n                    body: JSON.stringify({\n                        experimentID: expID,\n                    }),\n                });\n            }\n            catch (error) {\n                return error;\n            }\n            const result = yield response.json();\n            return result.condition;\n        });\n    }\n}\nPipePlugin.info = info;\n\nexport { PipePlugin as default };\n//# sourceMappingURL=index.js.map\n","import { initJsPsych } from 'jspsych';\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport 'jspsych/css/jspsych.css';\n\n// jsPsychプラグインのインポート\nimport htmlKeyboardResponse from '@jspsych/plugin-html-keyboard-response'\nimport surveyHtmlForm from '@jspsych/plugin-survey-html-form'\nimport htmlButtonResponse from '@jspsych/plugin-html-button-response'\nimport audioKeyboardResponse from '@jspsych/plugin-audio-keyboard-response'\nimport surveyLikert from '@jspsych/plugin-survey-likert'\nimport videoKeyboardResponse from '@jspsych/plugin-video-keyboard-response'\nimport surveyMultiChoice from '@jspsych/plugin-survey-multi-choice'\nimport surveyText from '@jspsych/plugin-survey-text'\nimport preload from '@jspsych/plugin-preload'\nimport { jsPsychPipe } from '@jspsych-contrib/plugin-pipe'\nimport callFunction from '@jspsych/plugin-call-function'\n// jsPsychSheetのインポート（必要な場合）\nimport jsPsychSheet from '@/scripts/jspsychsheet.js';\nimport '@/assets/jspsychsheet.css';\n\n// console.log('main.js: Script started');\n\nconst app = createApp(App)\n\n// console.log('main.js: Vue app created');\n\nwindow.onerror = function (message, source, lineno, colno, error) {\n    console.error('Global error:', message, 'at', source, lineno, colno);\n    console.error('Error object:', error);\n};\n\nwindow.addEventListener('unhandledrejection', function (event) {\n    console.error('Unhandled promise rejection:', event.reason);\n});\n\n// 実験の初期化\nconst jsPsych = initJsPsych({\n    show_progress_bar: true,\n    on_finish: function () {\n        // console.log('main.js: jsPsych experiment finished');\n        jsPsych.data.displayData();\n    }\n});\n// console.log('main.js: jsPsych initialized:', jsPsych);\n\n// subject_idの設定\nconst urlParams = new URLSearchParams(window.location.search);\nconst subject_id = urlParams.get('PROLIFIC_PID') || jsPsych.randomization.randomID(10);\n// console.log('main.js: Subject ID:', subject_id);\n\n// グローバルプロパティとしてjsPsychとプラグインを追加\napp.config.globalProperties.$subject_id = subject_id\napp.config.globalProperties.$jsPsych = jsPsych\napp.config.globalProperties.$jsPsychPlugins = {\n    htmlKeyboardResponse,\n    surveyHtmlForm,\n    htmlButtonResponse,\n    audioKeyboardResponse,\n    surveyLikert,\n    videoKeyboardResponse,\n    surveyMultiChoice,\n    surveyText,\n    preload,\n    jsPsychPipe,\n    callFunction\n}\n\n// console.log('main.js: Mounting Vue app');\napp.mount('#app')\n// console.log('main.js: Vue app mounted');","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0,\n\t121: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue_jspsych_test\"] = self[\"webpackChunkvue_jspsych_test\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [603,434,820,121], function() { return __webpack_require__(5217); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["getAllProperties","object","properties","Set","key","Reflect","ownKeys","add","getPrototypeOf","Object","prototype","module","exports","self","include","exclude","filter","match","pattern","test","some","constructor","descriptor","getOwnPropertyDescriptor","value","bind","id","_createElementBlock","_hoisted_1","async","loadQuestionData","possiblePaths","path","response","fetch","ok","encryptedData","json","decryptData","error","console","Error","substituteDecrypt","text","shift","split","map","char","code","charCodeAt","String","fromCharCode","join","substitutedDecrypted","decodedString","decodeURIComponent","escape","atob","JSON","parse","createExperiment","questionData","jsPsych","jsPsychPlugins","subject_id","urlParams","getUrlParams","params","URLSearchParams","window","location","search","PROLIFIC_PID","get","STUDY_ID","SESSION_ID","paramsPresent","add_subject_id","type","jsPsychCallFunction","func","data","addProperties","shuffleArray","array","i","length","j","Math","floor","random","selectAndRandomizeCNNVideos","selectedNumbers","randomizedConditions","cnn_videos","conditions","number","index","condition","videoData","videos","find","v","video","questions","welcome","jsPsychHtmlKeyboardResponse","stimulus","demographic_survey","jsPsychSurveyHtmlForm","preamble","html","button_label","task","on_load","document","querySelectorAll","forEach","input","addEventListener","this","replace","parseFloat","toFixed","consent_screen","jsPsychHtmlButtonResponse","choices","on_finish","endExperiment","coloredLikertCSS","nasaTLXCSS","applyColorToLikertScale","statement","opts","nextElementSibling","label","colors","classList","e","target","querySelector","click","toefl_preparation","toefl_listening","timeline","jsPsychAudioKeyboardResponse","trial_ends_after_audio","prompt","questionsHtml","toefl","q","shuffledOptions","options","option","multiple","button_html","selections","button","event","questionIndex","parseInt","getAttribute","isMultiple","indexOf","splice","remove","push","btn","allAnswered","every","selection","disabled","correct","num_correct","user_selections","stringify","sort","correct_answer","warn","generateDummyQuestionForNASATLX","name","labels","required","createNasaTLX","generateQuestions","jsPsychSurveyLikert","has_dummy","dummyQuestion","correctIndex","dummy_correct","dummy","setTimeout","continueButton","checkAllAnswered","Array","from","question","nasa_tlx","generateDummyQuestionForWorkloadQuestionnaire","createVideoQuestions","video_questions","video_trial_instruction","selected_videos","video_trial","jsPsychVideoKeyboardResponse","timelineVariable","trial_ends_after_video","color","video_number","jsPsychSurveyMultiChoice","correct_answers","responses","values","timeline_variables","subtitle_preference_survey","selects","select","selectedValues","s","uniqueValues","size","alert","rankResponses","slice","reasonResponse","includes","repeat_trial","trim","final_feedback","jsPsychSurveyText","rows","columns","textarea","maxLength","remainingChars","remainingCharsDisplay","getElementById","createElement","parentNode","insertBefore","nextSibling","textContent","sanitizedInput","DOMPurify","sanitize","Q0","escapedInput","escapeHTML","str","tag","script","src","head","appendChild","json_filename","save_data_osf","jsPsychPipe","action","experiment_id","filename","data_string","data_format","getCompletionCode","cnn_correct_ratio","allDummyCorrect","consented","end_screen","mean","dummyResponses","trial","consentData","completion_code","setup","instance","getCurrentInstance","onMounted","$jsPsych","$jsPsychPlugins","$subject_id","appContext","config","globalProperties","run","body","innerHTML","__exports__","render","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","SuppressedError","info","parameters","STRING","default","undefined","wait_message","HTML_STRING","PipePlugin","display_element","progressCSS","progressHTML","saveData","saveBase64Data","getCondition","trial_data","success","finishTrial","expID","method","headers","Accept","experimentID","app","createApp","App","onerror","message","source","lineno","colno","reason","initJsPsych","show_progress_bar","displayData","randomization","randomID","htmlKeyboardResponse","surveyHtmlForm","htmlButtonResponse","audioKeyboardResponse","surveyLikert","videoKeyboardResponse","surveyMultiChoice","surveyText","preload","callFunction","mount","sfc","props","__vccOpts","val","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","keys","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}